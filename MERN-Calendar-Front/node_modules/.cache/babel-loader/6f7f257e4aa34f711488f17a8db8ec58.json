{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Downloads\\\\ProyectSeminario\\\\MERN-Calendar-Front\\\\src\\\\components\\\\calendar\\\\CalendarScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const {\n    events,\n    activeEvent\n  } = useSelector(state => state.calendar);\n  const {\n    uid\n  } = useSelector(state => state.auth);\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDoubleClick = e => {\n    // console.log(e);\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = e => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = e => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const onSelectSlot = e => {\n    // console.log(e)\n    dispatch(eventClearActiveEvent());\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Calendar, {\n    localizer: localizer,\n    events: events,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    messages: messages,\n    eventPropGetter: eventStyleGetter,\n    onDoubleClickEvent: onDoubleClick,\n    onSelectEvent: onSelectEvent,\n    onView: onViewChange,\n    onSelectSlot: onSelectSlot,\n    selectable: true,\n    view: lastView,\n    components: {\n      event: CalendarEvent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddNewFab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), activeEvent && /*#__PURE__*/React.createElement(DeleteEventFab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(CalendarModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Diana/Downloads/ProyectSeminario/MERN-Calendar-Front/src/components/calendar/CalendarScreen.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","useDispatch","useSelector","moment","Navbar","messages","CalendarEvent","CalendarModal","uiOpenModal","eventSetActive","eventClearActiveEvent","eventStartLoading","AddNewFab","DeleteEventFab","locale","localizer","CalendarScreen","dispatch","events","activeEvent","state","calendar","uid","auth","lastView","setLastView","localStorage","getItem","onDoubleClick","e","onSelectEvent","onViewChange","setItem","onSelectSlot","eventStyleGetter","event","start","end","isSelected","style","backgroundColor","user","_id","borderRadius","opacity","display","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e);\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e)\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        \r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            \r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n\r\n\r\n            <AddNewFab />\r\n\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            \r\n\r\n            <CalendarModal />\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}